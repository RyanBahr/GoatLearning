warning: LF will be replaced by CRLF in lists/models.py.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in lists/tests.py.
The file will have its original line endings in your working directory
[1mdiff --git a/lists/__pycache__/models.cpython-37.pyc b/lists/__pycache__/models.cpython-37.pyc[m
[1mindex 3915d1c..92ba255 100644[m
Binary files a/lists/__pycache__/models.cpython-37.pyc and b/lists/__pycache__/models.cpython-37.pyc differ
[1mdiff --git a/lists/__pycache__/tests.cpython-37.pyc b/lists/__pycache__/tests.cpython-37.pyc[m
[1mindex 0cf0522..b1d387a 100644[m
Binary files a/lists/__pycache__/tests.cpython-37.pyc and b/lists/__pycache__/tests.cpython-37.pyc differ
[1mdiff --git a/lists/models.py b/lists/models.py[m
[1mindex 71a8362..2c30577 100644[m
[1m--- a/lists/models.py[m
[1m+++ b/lists/models.py[m
[36m@@ -1,3 +1,5 @@[m
 from django.db import models[m
 [m
 # Create your models here.[m
[32m+[m[32mclass Item(models.Model):[m
[32m+[m[32m    text = models.TextField(default = '')[m
[1mdiff --git a/lists/tests.py b/lists/tests.py[m
[1mindex 97823c2..66e6d69 100644[m
[1m--- a/lists/tests.py[m
[1m+++ b/lists/tests.py[m
[36m@@ -2,6 +2,7 @@[m [mfrom django.test import TestCase[m
 from django.core.urlresolvers import resolve[m
 from django.http import HttpRequest[m
 from django.template.loader import render_to_string[m
[32m+[m[32mfrom lists.models import Item[m
 [m
 from lists.views import home_page[m
 [m
[36m@@ -25,3 +26,22 @@[m [mclass HomePageTest(TestCase):[m
         response = home_page(request)[m
 [m
         self.assertIn('A new list item', response.content.decode())[m
[32m+[m
[32m+[m[32mclass ItemMOdelTest(TestCase):[m
[32m+[m
[32m+[m[32m    def test_saving_and_retrieving_items(self):[m
[32m+[m[32m        first_item = Item()[m
[32m+[m[32m        first_item.text = 'The first (ever) list item'[m
[32m+[m[32m        first_item.save()[m
[32m+[m
[32m+[m[32m        second_item = Item()[m
[32m+[m[32m        second_item.text = 'Item the second'[m
[32m+[m[32m        second_item.save()[m
[32m+[m
[32m+[m[32m        saved_items = Item.objects.all()[m
[32m+[m[32m        self.assertEqual(saved_items.count(), 2)[m
[32m+[m
[32m+[m[32m        first_saved_item = saved_items[0][m
[32m+[m[32m        second_saved_item = saved_items[1][m
[32m+[m[32m        self.assertEqual(first_saved_item.text, 'The first (ever) list item')[m
[32m+[m[32m        self.assertEqual(second_saved_item.text, 'Item the second')[m
